spring.application.name=spring-boot-camel-integracion

#spring.main.sources=com.itau

#logging.config=classpath:logback.xml

# the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
camel.springboot.name=CamelCxfRest

# to reconfigure the camel servlet context-path mapping to use /api/* instead of /camel/*
camel.component.servlet.mapping.context-path=/*

spring.mvc.static-path-pattern=/resources/**

#------------------------------------------------------------------------------
# Server Configuration
#------------------------------------------------------------------------------
# lets listen on all ports to ensure we can be invoked from the pod IP
# Default Port
#server.servlet-path: /system
 
server.address=0.0.0.0
server.port=8085
#------------------------------------------------------------------------------
# Management Configuration
#------------------------------------------------------------------------------
management.address=0.0.0.0

# lets use a different management port in case you need to listen to HTTP requests on 8080
management.port=8088

#------------------------------------------------------------------------------
# Actuator
#------------------------------------------------------------------------------
info.app.name=${spring.application.name}
info.app.description=Integración GetAccountsByDocument
info.app.version=@project.version@

# disable all management endpoints except health
endpoints.enabled = true
endpoints.info.sensitive = false
#endpoints.health.enabled = true
# Disable auth for actuator endpoints
management.security.enabled=false


# Disable static content
spring.resources.add-mappings=true

# Enable looking for .gz resources
spring.resources.chain.enabled=true
spring.resources.chain.gzipped=true

#------------------------------------------------------------------------------
# Swagger Info
#------------------------------------------------------------------------------
api.version = @project.version@
api.title = ${spring.application.name}
api.description = "Api de Integración, consulta cuentas de cliente."
api.description.service = "Descripcion Servicio"
api.description.input = "Descripcion Parametro Entrada"
api.description.input.post = "Descripcion Parametro Entrada"

api.description.healtcheck="Servicio healtcheck de OCP"
api.description.getaccounstbydocument="Consulta de cuentas con documento"

endpoint.healtcheck=healtcheck
endpoint.getaccounstbydocument=GET/{id_cedula}/services/v2/accounts/accountsdetailbydocument

servicio.url=http://10.10.20.40/t
servicio.connection.timeout=20000

path.test=GET/1_1045/services/v2/accounts/accountsdetailbydocument


logging.level.com.itau=DEBUG


